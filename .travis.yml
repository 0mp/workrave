sudo: required

dist: trusty

services:
  - docker

notifications:
  email:
    on_success: change
    on_failure: change

language: cpp
osx_image: xcode8.3

matrix:
  allow_failures:
    - env: COMPILER="gcc" WITH_UI="Qt5"  CONF_ENABLE="INDICATOR,GNOME_CLASSIC_PANEL,GSTREAMER,PULSE" CONF_DISABLE="GCONF,TESTS,COVERAGE,TRACING" DOCKER_IMAGE="ubuntu-zesty-plus"
  include:
    - os: linux
      compiler: gcc
      env: >
        COMPILER="gcc"
        WITH_UI="Qt5"
        CONF_ENABLE="INDICATOR,GNOME_CLASSIC_PANEL,GSTREAMER,PULSE"
        CONF_DISABLE="GCONF,TESTS,COVERAGE,TRACING"
        DOCKER_IMAGE="ubuntu-zesty-plus"
    - os: linux
      compiler: gcc
      env: >
        COMPILER="gcc"
        WITH_UI="Gtk+3"
        CONF_ENABLE="INDICATOR,GNOME_CLASSIC_PANEL,GSTREAMER,PULSE"
        CONF_DISABLE="GCONF,TESTS,COVERAGE,TRACING"
        DOCKER_IMAGE="ubuntu-zesty-plus"
    - os: linux
      compiler: gcc
      env: >
        COMPILER="clang"
        WITH_UI="Gtk+3"
        CONF_ENABLE="INDICATOR,GNOME_CLASSIC_PANEL,GSTREAMER,PULSE"
        CONF_DISABLE="GCONF,TESTS,COVERAGE,TRACING"
        DOCKER_IMAGE="ubuntu-zesty-plus"
    - os: linux
      compiler: gcc
      env: >
        COMPILER="clang"
        WITH_UI="Gtk+3"
        CONF_ENABLE="INDICATOR,GNOME_CLASSIC_PANEL,GSTREAMER,PULSE,TRACING"
        CONF_DISABLE="GCONF,TESTS,COVERAGE"
        DOCKER_IMAGE="ubuntu-zesty-plus"
    - os: linux
      compiler: gcc
      env: >
        COMPILER="gcc"
        WITH_UI="Gtk+3"
        CONF_ENABLE="INDICATOR,GNOME_CLASSIC_PANEL,GSTREAMER,PULSE"
        CONF_DISABLE="GCONF,TESTS,COVERAGE,TRACING"
        DOCKER_IMAGE="ubuntu-zesty"
    - os: linux
      compiler: gcc
      env: >
        COMPILER="gcc"
        WITH_UI="Gtk+3"
        CONF_ENABLE="INDICATOR,GNOME_CLASSIC_PANEL,GSTREAMER,PULSE"
        CONF_DISABLE="GCONF,TESTS,COVERAGE,TRACING"
        DOCKER_IMAGE="ubuntu-yakkety"
    - os: linux
      compiler: gcc
      env: >
        COMPILER="gcc"
        WITH_UI="Gtk+3"
        CONF_ENABLE="INDICATOR,GNOME_CLASSIC_PANEL,GSTREAMER,PULSE"
        CONF_DISABLE="GCONF,TESTS,COVERAGE,TRACING"
        DOCKER_IMAGE="ubuntu-xenial"
    - os: linux
      compiler: gcc
      env: >
        COMPILER="gcc"
        WITH_UI="Gtk+3"
        CONF_ENABLE=""
        CONF_DISABLE="INDICATOR,GSTREAMER,PULSE,GNOME_CLASSIC_PANEL,GCONF,TESTS,COVERAGE,TRACING"
        DOCKER_IMAGE="mingw-gtk"
    - os: linux
      compiler: gcc
      env: >
        COMPILER="gcc"
        WITH_UI="Gtk+2"
        CONF_ENABLE=""
        CONF_DISABLE="INDICATOR,GSTREAMER,PULSE,GNOME_CLASSIC_PANEL,GCONF,TESTS,COVERAGE,TRACING"
        DOCKER_IMAGE="mingw-gtk"
    - os: linux
      compiler: gcc
      env: >
        COMPILER="gcc"
        WITH_UI="Gtk+3"
        CONF_ENABLE=""
        CONF_DISABLE="INDICATOR,GSTREAMER,PULSE,GNOME_CLASSIC_PANEL,GCONF,TESTS,COVERAGE,TRACING"
        DOCKER_IMAGE="mingw-gtk"
    - os: osx
      compiler: clang
      env: >
        WITH_UI="Qt5"
        CONF_ENABLE=""
        CONF_DISABLE="INDICATOR,GSTREAMER,PULSE,GNOME_CLASSIC_PANEL,GCONF,TESTS,COVERAGE,TRACING"

before_install: |
  install_osx()
  {
    # compilation with system wide gettext fails at the link stage with missing symbols...
    brew install gettext qt5 python3
    brew link gettext --force
    brew linkapps qt5
    brew outdated cmake || brew upgrade cmake

    pip3 install --user Jinja2==2.8 # required for dbus support, system (distro) wide include paths are ignored
  }

install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then install_osx; fi

script: |
  if [[ $DOCKER_IMAGE ]]; then
    printenv
    docker run --rm \
        -v "$TRAVIS_BUILD_DIR:/workspace/source" \
        $(printenv | grep -E '^(COMPILER|WITH_UI|CONF_ENABLE|CONF_DISABLE|DOCKER_IMAGE|TRAVIS_BUILD_DIR)=' | sed 's/^/-e /g') \
        rcaelers/workrave-build:${DOCKER_IMAGE} \
        sh -c "/workspace/source/build/travis/build.sh"
  else
     build/travis/build.sh
  fi
