sudo: required
dist: trusty

services:
  - docker

notifications:
  email:
    on_success: change
    on_failure: change

language: cpp
osx_image: xcode9.4

matrix:
  include:
    - os: linux
      env: >
        COMPILER="gcc"
        DOCKER_IMAGE="ubuntu-bionic"
        CONF_GTK_VER="2"
        CONF_ENABLE="gsettings,,exercises,xml,gconf,distribution,experimental"
        CONF_DISABLE="pulse,xfce,gnome3,gstreamer,dbus,mate,indicator"
    - os: linux
      env: >
        COMPILER="gcc"
        DOCKER_IMAGE="ubuntu-bionic"
        CONF_GTK_VER="3"
        CONF_ENABLE="gnome3,gsettings,xml,pulse,indicator,xfce,mate,dbus,distribution,experimental,gconf,gstreamer,exercises"
        CONF_DISABLE=""
    - os: linux
      env: >
        COMPILER="gcc"
        DOCKER_IMAGE="ubuntu-bionic"
        CONF_GTK_VER="3"
        CONF_ENABLE="xml,dbus,distribution,pulse,exercises,gsettings,gstreamer"
        CONF_DISABLE="xfce,gnome3,gconf,mate,indicator,experimental"
    - os: linux
      env: >
        COMPILER="gcc"
        CONF_GTK_VER="3"
        CONF_ENABLE="gnome3,gsettings,xml,pulse,indicator,xfce,mate,dbus,distribution,experimental,gconf,gstreamer,exercises"
        CONF_DISABLE=""
        DOCKER_IMAGE="ubuntu-bionic"
    - os: linux
      env: >
        COMPILER="gcc"
        CONF_GTK_VER="3"
        CONF_ENABLE="gnome3,gsettings,xml,pulse,indicator,xfce,mate,dbus,distribution,experimental,gconf,gstreamer,exercises"
        CONF_DISABLE=""
        DOCKER_IMAGE="ubuntu-cosmic"
    - os: linux
      env: >
        COMPILER="gcc"
        CONF_GTK_VER="3"
        CONF_ENABLE="gnome3,pulse,dbus,experimental,gstreamer,exercises,xml"
        CONF_DISABLE="gsettings,gconf,indicator,xfce,mate,debug,distribution,tests,tracing"
        DOCKER_IMAGE="ubuntu-cosmic"
    - os: linux
      env: >
        COMPILER="gcc"
        CONF_GTK_VER="3"
        CONF_ENABLE="gnome3,gsettings,xml,pulse,indicator,xfce,mate,dbus,distribution,experimental,gconf,gstreamer,exercises"
        CONF_DISABLE=""
        DOCKER_IMAGE="ubuntu-artful"
    - os: linux
      env: >
        COMPILER="gcc"
        CONF_GTK_VER="3"
        CONF_ENABLE="gnome3,gsettings,xml,pulse,indicator,xfce,mate,dbus,distribution,experimental,gconf,gstreamer,exercises"
        CONF_DISABLE=""
        DOCKER_IMAGE="ubuntu-xenial"
    - os: linux
      env: >
        COMPILER="gcc"
        CONFIGURATION="Release"
        DOCKER_IMAGE="mingw-gtk2"
    - os: linux
      env: >
        COMPILER="gcc"
        CONFIGURATION="Debug"
        DOCKER_IMAGE="mingw-gtk2"

before_install: |
  install_osx()
  {
    # compilation with system wide gettext fails at the link stage with missing symbols...
    brew install gettext qt5 python3
    brew link gettext --force
    brew linkapps qt5
    brew outdated cmake || brew upgrade cmake

    pip3 install --user Jinja2==2.8 # required for dbus support, system (distro) wide include paths are ignored
  }

install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then install_osx; fi

script: |
  if [[ $DOCKER_IMAGE ]]; then
    printenv
    docker run --rm \
        -v "$TRAVIS_BUILD_DIR:/workspace/source" \
        $(printenv | grep -E '^(COMPILER|CONF_ENABLE|CONF_DISABLE||CONF_FLAGS|CONF_GTK_VER|CONFIGURATION|DOCKER_IMAGE|TRAVIS_BUILD_DIR)=' | sed 's/^/-e /g') \
        rcaelers/workrave-build:${DOCKER_IMAGE} \
        sh -c "/workspace/source/build/travis/build.sh"
  else
     build/travis/build.sh
  fi
